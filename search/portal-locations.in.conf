# {{geoportal.name}}
# Search locations
source src_{{geoportal.name}}_locations : def_pgsql
{
    sql_db = {{mapserver.PORTAL_DB_NAME}}
}

{% for location in search.locations -%}
source src_{{geoportal.name}}_{{location}} : src_{{geoportal.name}}_locations
{
    sql_attr_bigint = bid
    sql_attr_string = label
    sql_attr_uint = rank
    sql_attr_string = origin
    sql_attr_string = geom_st_box2d
    sql_attr_float = x
    sql_attr_float = y
    sql_attr_float = lon
    sql_attr_float = lat
    sql_attr_bigint = weight
    sql_field_string = search_string
    sql_field_string = geom_quadindex
    sql_query = \
        SELECT \
            gid::bigint \
            , gid::bigint as bid \
            , '<b>' || search_label::text || '</b>' as label \
            , {{search.origins_to_ranks[location]}} as rank \
            , '{{location}}' as origin \
            , geom_st_box2d \
            , y \
            , x \
            , lon \
            , lat \
            , weight \
            , remove_accents(search_string::text) as search_string \
            , geom_quadindex \
        from \
            search.{{location}}
        
}

index {{geoportal.name}}_{{location}}
{
    type = plain
    docinfo = extern
    min_infix_len = 2
    source = src_{{geoportal.name}}_{{location}}
    path = /var/lib/sphinx/data/index/{{geoportal.name}}_{{location}}
}


{%- endfor %}


index {{geoportal.name}}_locations
{
    type = distributed
    # Order must be respected to correctly view expected results
    # @TODO research why
    {%- for location in search.locations %}
    local = {{geoportal.name}}_{{location}}
    {%- endfor %}
}
